\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Genericidad en C++ basados en templates.Tipos de argumentos}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Tipos de argumentos}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Definici\'on de arrays en C++}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Definici\'on}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Declaraci\'on y creaci\'on de arreglos}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Inicializaci\'on}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Distintos tipos de constructores en C++(defecto y copia)}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}\IeC {\textquestiondown }Qu\'e hace cada uno de ellos?}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}\IeC {\textquestiondown }Cu\'ando se llaman?}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Inicializaci\'on de campos}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}\IeC {\textquestiondown }C\'omo funciona el paso de par\'ametros cuando se llama a una funci\'on?}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}\IeC {\textquestiondown }Cu\'ando se deben utilizar par\'ametros por valor, por puntero o por referencia?}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}Constructores con un solo argumento}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7}Constructores explicit}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Funciones inline y const}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Implementaci\'on de las funciones inline}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Diferencia entre const T x; T const x; y const T const x;}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Funci\'on const para punteros}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Redefinici\'on de operadores [] y +.Tipos de traspasos en C++}{16}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Especializaci\'on de los templates}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Templates de funciones}{19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Templates de clases}{20}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Tipos union}{21}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Declaraci\'on}{22}}
